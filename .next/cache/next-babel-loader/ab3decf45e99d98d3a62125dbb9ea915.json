{"ast":null,"code":"import { criteriaMap } from '../config/criteriaMap';\n\nvar isLocationMatch = function isLocationMatch(brand, criteria, selected) {\n  return brand.fields[criteria.contentfulField].fields && selected[criteria.name].includes(brand.fields[criteria.contentfulField].fields.country);\n};\n\nexport var filterBrands = function filterBrands(brand, selected) {\n  var matches = [];\n  criteriaMap.forEach(function (criteria, index) {\n    // if no nothing from criteria selected, matches\n    matches[index] = selected[criteria.name].length === 0; // if brand doesn't contain criteria field, skip\n\n    if (!brand.fields[criteria.contentfulField]) {\n      return;\n    } // if criteria matches location\n\n\n    if (criteria.name === 'location') {\n      if (isLocationMatch(brand, criteria, selected)) {\n        matches[index] = true;\n      }\n    } // if criteria doesn't match location\n\n\n    if (criteria.name !== 'location') {\n      brand.fields[criteria.contentfulField].forEach(function (field) {\n        // if criteria is a string\n        if (typeof field === 'string') {\n          if (selected[criteria.name].includes(field)) {\n            matches[index] = true;\n          } // if criteria is not a string\n\n        } else if (field.fields && selected[criteria.name].includes(field.fields.slug)) {\n          matches[index] = true;\n        }\n      });\n    }\n  });\n  return matches.every(function (match) {\n    return match;\n  });\n};","map":{"version":3,"sources":["/Users/marcelkalveram/dev/projects/the-sustainable-list-next/src/helpers/filter.js"],"names":["criteriaMap","isLocationMatch","brand","criteria","selected","fields","contentfulField","name","includes","country","filterBrands","matches","forEach","index","length","field","slug","every","match"],"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB;AAAA,SACtBF,KAAK,CAACG,MAAN,CAAaF,QAAQ,CAACG,eAAtB,EAAuCD,MAAvC,IACAD,QAAQ,CAACD,QAAQ,CAACI,IAAV,CAAR,CAAwBC,QAAxB,CACEN,KAAK,CAACG,MAAN,CAAaF,QAAQ,CAACG,eAAtB,EAAuCD,MAAvC,CAA8CI,OADhD,CAFsB;AAAA,CAAxB;;AAMA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACR,KAAD,EAAQE,QAAR,EAAqB;AAC/C,MAAMO,OAAO,GAAG,EAAhB;AAEAX,EAAAA,WAAW,CAACY,OAAZ,CAAoB,UAACT,QAAD,EAAWU,KAAX,EAAqB;AACvC;AACAF,IAAAA,OAAO,CAACE,KAAD,CAAP,GAAiBT,QAAQ,CAACD,QAAQ,CAACI,IAAV,CAAR,CAAwBO,MAAxB,KAAmC,CAApD,CAFuC,CAIvC;;AACA,QAAI,CAACZ,KAAK,CAACG,MAAN,CAAaF,QAAQ,CAACG,eAAtB,CAAL,EAA6C;AAC3C;AACD,KAPsC,CASvC;;;AACA,QAAIH,QAAQ,CAACI,IAAT,KAAkB,UAAtB,EAAkC;AAChC,UAAIN,eAAe,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,CAAnB,EAAgD;AAC9CO,QAAAA,OAAO,CAACE,KAAD,CAAP,GAAiB,IAAjB;AACD;AACF,KAdsC,CAgBvC;;;AACA,QAAIV,QAAQ,CAACI,IAAT,KAAkB,UAAtB,EAAkC;AAChCL,MAAAA,KAAK,CAACG,MAAN,CAAaF,QAAQ,CAACG,eAAtB,EAAuCM,OAAvC,CAA+C,UAAAG,KAAK,EAAI;AACtD;AACA,YAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,cAAIX,QAAQ,CAACD,QAAQ,CAACI,IAAV,CAAR,CAAwBC,QAAxB,CAAiCO,KAAjC,CAAJ,EAA6C;AAC3CJ,YAAAA,OAAO,CAACE,KAAD,CAAP,GAAiB,IAAjB;AACD,WAH4B,CAI7B;;AACD,SALD,MAKO,IACLE,KAAK,CAACV,MAAN,IACAD,QAAQ,CAACD,QAAQ,CAACI,IAAV,CAAR,CAAwBC,QAAxB,CAAiCO,KAAK,CAACV,MAAN,CAAaW,IAA9C,CAFK,EAGL;AACAL,UAAAA,OAAO,CAACE,KAAD,CAAP,GAAiB,IAAjB;AACD;AACF,OAbD;AAcD;AACF,GAjCD;AAkCA,SAAOF,OAAO,CAACM,KAAR,CAAc,UAAAC,KAAK;AAAA,WAAIA,KAAJ;AAAA,GAAnB,CAAP;AACD,CAtCM","sourcesContent":["import { criteriaMap } from '../config/criteriaMap';\n\nconst isLocationMatch = (brand, criteria, selected) =>\n  brand.fields[criteria.contentfulField].fields &&\n  selected[criteria.name].includes(\n    brand.fields[criteria.contentfulField].fields.country,\n  );\n\nexport const filterBrands = (brand, selected) => {\n  const matches = [];\n\n  criteriaMap.forEach((criteria, index) => {\n    // if no nothing from criteria selected, matches\n    matches[index] = selected[criteria.name].length === 0;\n\n    // if brand doesn't contain criteria field, skip\n    if (!brand.fields[criteria.contentfulField]) {\n      return;\n    }\n\n    // if criteria matches location\n    if (criteria.name === 'location') {\n      if (isLocationMatch(brand, criteria, selected)) {\n        matches[index] = true;\n      }\n    }\n\n    // if criteria doesn't match location\n    if (criteria.name !== 'location') {\n      brand.fields[criteria.contentfulField].forEach(field => {\n        // if criteria is a string\n        if (typeof field === 'string') {\n          if (selected[criteria.name].includes(field)) {\n            matches[index] = true;\n          }\n          // if criteria is not a string\n        } else if (\n          field.fields &&\n          selected[criteria.name].includes(field.fields.slug)\n        ) {\n          matches[index] = true;\n        }\n      });\n    }\n  });\n  return matches.every(match => match);\n};\n"]},"metadata":{},"sourceType":"module"}