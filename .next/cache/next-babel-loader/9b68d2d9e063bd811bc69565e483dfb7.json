{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useMemo, useReducer } from 'react'; // data\n\nimport data from '../data';\nimport { criteriaMap } from '../config/criteriaMap';\nimport { filterBrands } from '../helpers/filter';\nimport { sortByAz, sortByPrice } from '../helpers/sort';\nimport { actions, initialState, reducer } from '../store'; // UI\n\nimport { Layout } from '../components/Layout/Layout';\nimport { Main } from '../components/Main/Main';\nimport { Sort } from '../components/Sort/Sort';\nimport { Brands } from '../components/Brands/Brands';\nimport { Filters } from '../components/Filters/Filters';\nexport default function Index() {\n  var _useReducer = useReducer(reducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // filter\n\n\n  var brands = useMemo(function () {\n    return data.brands.filter(function (brands) {\n      return filterBrands(brands, state.selected);\n    });\n  }, [state.selected]); // search for filter\n\n  if (state.searchFor !== '') {\n    brands = brands.filter(function (brand) {\n      return brand.fields.title.toLowerCase().includes(state.searchFor.toLowerCase());\n    });\n  } // sort by price\n\n\n  if (state.sortBy.price !== null) {\n    brands.sort(function (a, b) {\n      return sortByPrice(state, a, b);\n    });\n  } // sort by az\n\n\n  if (state.sortBy.az !== null) {\n    brands.sort(function (a, b) {\n      return sortByAz(state, a, b);\n    });\n  }\n\n  return __jsx(Layout, {\n    fixed: state.showFilters\n  }, __jsx(Filters, {\n    criteriaMap: criteriaMap,\n    filters: state.filters,\n    selected: state.selected,\n    setSelected: function setSelected(selected) {\n      return dispatch({\n        type: actions.SET_SELECTED,\n        payload: selected\n      });\n    },\n    showFilters: state.showFilters,\n    setShowFilters: function setShowFilters(show) {\n      return dispatch({\n        type: actions.SET_SHOW_FILTERS,\n        payload: show\n      });\n    }\n  }), __jsx(Main, null, __jsx(Sort, {\n    searchFor: state.searchFor,\n    setSearchFor: function setSearchFor(searchTerm) {\n      return dispatch({\n        type: actions.SET_SEARCH_FOR,\n        payload: searchTerm\n      });\n    },\n    totalCount: state.brandsCount,\n    count: state.brands.length,\n    sortBy: state.sortBy,\n    setSortBy: function setSortBy(sortBy) {\n      return dispatch({\n        type: actions.SET_SORT_BY,\n        payload: sortBy\n      });\n    },\n    setShowFilters: function setShowFilters(show) {\n      return dispatch({\n        type: actions.SET_SHOW_FILTERS,\n        payload: show\n      });\n    }\n  }), __jsx(Brands, {\n    criteriaMap: criteriaMap,\n    brands: brands,\n    selected: state.selected\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}