{"ast":null,"code":"var _jsxFileName = \"/Users/marcelkalveram/dev/projects/the-sustainable-list-next/src/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useMemo, useReducer } from 'react';\nimport '../styles/App.css'; // data\n\nimport data from '../data';\nimport { criteriaMap } from '../config/criteriaMap';\nimport { filterBrands } from '../helpers/filter';\nimport { sortByAz, sortByPrice } from '../helpers/sort';\nimport { actions, initialState, reducer } from '../store'; // UI\n\nimport { Header } from '../components/Header/Header';\nimport { Sort } from '../components/Sort/Sort';\nimport { Brands } from '../components/Brands/Brands';\nimport { Filters } from '../components/Filters/Filters';\n\nfunction Index() {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState); // filter\n\n  let brands = useMemo(() => data.brands.filter(brands => filterBrands(brands, state.selected)), [state.selected]); // search for filter\n\n  if (state.searchFor !== '') {\n    brands = brands.filter(brand => brand.fields.title.toLowerCase().includes(state.searchFor.toLowerCase()));\n  } // sort by price\n\n\n  if (state.sortBy.price !== null) {\n    brands.sort((a, b) => sortByPrice(state, a, b));\n  } // sort by az\n\n\n  if (state.sortBy.az !== null) {\n    brands.sort((a, b) => sortByAz(state, a, b));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Filters, {\n    criteriaMap: criteriaMap,\n    filters: state.filters,\n    selected: state.selected,\n    setSelected: selected => dispatch({\n      type: actions.SET_SELECTED,\n      payload: selected\n    }),\n    showFilters: state.showFilters,\n    setShowFilters: show => dispatch({\n      type: actions.SET_SHOW_FILTERS,\n      payload: show\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(Sort, {\n    searchFor: state.searchFor,\n    setSearchFor: searchTerm => dispatch({\n      type: actions.SET_SEARCH_FOR,\n      payload: searchTerm\n    }),\n    totalCount: state.brandsCount,\n    count: state.brands.length,\n    sortBy: state.sortBy,\n    setSortBy: sortBy => dispatch({\n      type: actions.SET_SORT_BY,\n      payload: sortBy\n    }),\n    setShowFilters: show => dispatch({\n      type: actions.SET_SHOW_FILTERS,\n      payload: show\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), __jsx(Brands, {\n    criteriaMap: criteriaMap,\n    brands: brands,\n    selected: state.selected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })));\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/marcelkalveram/dev/projects/the-sustainable-list-next/src/pages/index.js"],"names":["React","useMemo","useReducer","data","criteriaMap","filterBrands","sortByAz","sortByPrice","actions","initialState","reducer","Header","Sort","Brands","Filters","Index","state","dispatch","brands","filter","selected","searchFor","brand","fields","title","toLowerCase","includes","sortBy","price","sort","a","b","az","filters","type","SET_SELECTED","payload","showFilters","show","SET_SHOW_FILTERS","searchTerm","SET_SEARCH_FOR","brandsCount","length","SET_SORT_BY"],"mappings":"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","sourcesContent":["import React, { useMemo, useReducer } from 'react';\nimport '../styles/App.css';\n\n// data\nimport data from '../data';\nimport { criteriaMap } from '../config/criteriaMap';\nimport { filterBrands } from '../helpers/filter';\nimport { sortByAz, sortByPrice } from '../helpers/sort';\nimport { actions, initialState, reducer } from '../store';\n\n// UI\nimport { Header } from '../components/Header/Header';\nimport { Sort } from '../components/Sort/Sort';\nimport { Brands } from '../components/Brands/Brands';\nimport { Filters } from '../components/Filters/Filters';\n\nfunction Index() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // filter\n  let brands = useMemo(\n    () => data.brands.filter(brands => filterBrands(brands, state.selected)),\n    [state.selected],\n  );\n\n  // search for filter\n  if (state.searchFor !== '') {\n    brands = brands.filter(brand =>\n      brand.fields.title.toLowerCase().includes(state.searchFor.toLowerCase()),\n    );\n  }\n  // sort by price\n  if (state.sortBy.price !== null) {\n    brands.sort((a, b) => sortByPrice(state, a, b));\n  }\n\n  // sort by az\n  if (state.sortBy.az !== null) {\n    brands.sort((a, b) => sortByAz(state, a, b));\n  }\n\n  return (\n    <>\n      <Filters\n        criteriaMap={criteriaMap}\n        filters={state.filters}\n        selected={state.selected}\n        setSelected={selected =>\n          dispatch({ type: actions.SET_SELECTED, payload: selected })\n        }\n        showFilters={state.showFilters}\n        setShowFilters={show =>\n          dispatch({ type: actions.SET_SHOW_FILTERS, payload: show })\n        }\n      />\n      <div className=\"main-container\">\n        <Sort\n          searchFor={state.searchFor}\n          setSearchFor={searchTerm =>\n            dispatch({ type: actions.SET_SEARCH_FOR, payload: searchTerm })\n          }\n          totalCount={state.brandsCount}\n          count={state.brands.length}\n          sortBy={state.sortBy}\n          setSortBy={sortBy =>\n            dispatch({ type: actions.SET_SORT_BY, payload: sortBy })\n          }\n          setShowFilters={show =>\n            dispatch({ type: actions.SET_SHOW_FILTERS, payload: show })\n          }\n        />\n        <Brands\n          criteriaMap={criteriaMap}\n          brands={brands}\n          selected={state.selected}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}