{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/marcelkalveram/dev/projects/the-sustainable-list-next/src/pages/_document.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { extractStyles } from 'evergreen-ui';\nimport flush from 'styled-jsx/server';\nexport default class MyDocument extends Document {\n  static getInitialProps({\n    renderPage\n  }) {\n    const page = renderPage(); // `css` is a string with css from both glamor and ui-box.\n    // No need to get the glamor css manually if you are using it elsewhere in your app.\n    //\n    // `hydrationScript` is a script you should render on the server.\n    // It contains a stringified version of the glamor and ui-box caches.\n    // Evergreen will look for that script on the client and automatically hydrate\n    // both glamor and ui-box.\n\n    const {\n      css,\n      hydrationScript\n    } = extractStyles();\n    const styles = flush();\n    return _objectSpread({}, page, {\n      css,\n      hydrationScript\n    });\n  }\n\n  render() {\n    const {\n      css,\n      hydrationScript\n    } = this.props;\n    return __jsx(\"html\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: css\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), styles), __jsx(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), hydrationScript, __jsx(NextScript, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/marcelkalveram/dev/projects/the-sustainable-list-next/src/pages/_document.js"],"names":["React","Document","Head","Main","NextScript","extractStyles","flush","MyDocument","getInitialProps","renderPage","page","css","hydrationScript","styles","render","props","__html"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,eAAe,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAC/C,SAAOO,eAAP,CAAuB;AAAEC,IAAAA;AAAF,GAAvB,EAAuC;AACrC,UAAMC,IAAI,GAAGD,UAAU,EAAvB,CADqC,CAErC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAM;AAAEE,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAA2BP,aAAa,EAA9C;AACA,UAAMQ,MAAM,GAAGP,KAAK,EAApB;AACA,6BACKI,IADL;AAEEC,MAAAA,GAFF;AAGEC,MAAAA;AAHF;AAKD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAA2B,KAAKG,KAAtC;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEL;AAAV,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGE,MAFH,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGD,eAFH,EAGE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CANF,CADF;AAcD;;AApC8C","sourcesContent":["import React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { extractStyles } from 'evergreen-ui';\nimport flush from 'styled-jsx/server';\n\nexport default class MyDocument extends Document {\n  static getInitialProps({ renderPage }) {\n    const page = renderPage();\n    // `css` is a string with css from both glamor and ui-box.\n    // No need to get the glamor css manually if you are using it elsewhere in your app.\n    //\n    // `hydrationScript` is a script you should render on the server.\n    // It contains a stringified version of the glamor and ui-box caches.\n    // Evergreen will look for that script on the client and automatically hydrate\n    // both glamor and ui-box.\n    const { css, hydrationScript } = extractStyles();\n    const styles = flush();\n    return {\n      ...page,\n      css,\n      hydrationScript,\n    };\n  }\n\n  render() {\n    const { css, hydrationScript } = this.props;\n\n    return (\n      <html>\n        <Head>\n          <style dangerouslySetInnerHTML={{ __html: css }} />\n          {styles}\n        </Head>\n\n        <body>\n          <Main />\n          {hydrationScript}\n          <NextScript />\n        </body>\n      </html>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}