{"version":3,"file":"static/webpack/static/development/pages/index.js.7ff1023059fd644b16dd.hot-update.js","sources":["webpack:///./src/pages/index.js"],"sourcesContent":["import React, { useMemo, useReducer } from 'react';\n\n// data\nimport data from '../data';\nimport { criteriaMap } from '../config/criteriaMap';\nimport { filterBrands } from '../helpers/filter';\nimport { sortByAz, sortByPrice } from '../helpers/sort';\nimport { actions, initialState, reducer } from '../store';\n\n// UI\nimport { Layout } from '../components/Layout/Layout';\nimport { Main } from '../components/Main/Main';\nimport { Sort } from '../components/Sort/Sort';\nimport { Brands } from '../components/Brands/Brands';\nimport { Filters } from '../components/Filters/Filters';\n\nexport default function Index() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // filter\n  let brands = useMemo(\n    () => data.brands.filter(brands => filterBrands(brands, state.selected)),\n    [state.selected],\n  );\n\n  // search for filter\n  if (state.searchFor !== '') {\n    brands = brands.filter(brand =>\n      brand.fields.title.toLowerCase().includes(state.searchFor.toLowerCase()),\n    );\n  }\n  // sort by price\n  if (state.sortBy.price !== null) {\n    brands.sort((a, b) => sortByPrice(state, a, b));\n  }\n\n  // sort by az\n  if (state.sortBy.az !== null) {\n    brands.sort((a, b) => sortByAz(state, a, b));\n  }\n\n  return (\n    <Layout fixed={state.showFilters}>\n      <Filters\n        criteriaMap={criteriaMap}\n        filters={state.filters}\n        selected={state.selected}\n        setSelected={selected =>\n          dispatch({ type: actions.SET_SELECTED, payload: selected })\n        }\n        showFilters={state.showFilters}\n        setShowFilters={show =>\n          dispatch({ type: actions.SET_SHOW_FILTERS, payload: show })\n        }\n      />\n      <Main>\n        <Sort\n          searchFor={state.searchFor}\n          setSearchFor={searchTerm =>\n            dispatch({ type: actions.SET_SEARCH_FOR, payload: searchTerm })\n          }\n          totalCount={state.brandsCount}\n          count={state.brands.length}\n          sortBy={state.sortBy}\n          setSortBy={sortBy =>\n            dispatch({ type: actions.SET_SORT_BY, payload: sortBy })\n          }\n          setShowFilters={show =>\n            dispatch({ type: actions.SET_SHOW_FILTERS, payload: show })\n          }\n        />\n        <Brands\n          criteriaMap={criteriaMap}\n          brands={brands}\n          selected={state.selected}\n        />\n      </Main>\n    </Layout>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AADA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;A","sourceRoot":""}